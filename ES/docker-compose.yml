version: '3.5'
services:

  elasticsearch:
    networks:
      - es
    image: 'elasticsearch:6.7.0'
    command: [ elasticsearch, -E, network.host=0.0.0.0, -E, discovery.zen.ping.unicast.hosts=elasticsearch, -E, discovery.zen.minimum_master_nodes=1 ]
    volumes:
      - /home/ubuntu/esdata:/usr/share/elasticsearch/data
    deploy:
      mode: 'global'
      placement:
        constraints: [node.labels.app_role == elasticsearch]
      endpoint_mode: dnsrr
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200/_cluster/health"]
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 30s

  elastic:
    networks:
      - proxy
      - es
    image: 'nginx:1'
    ports:
      - '9200:9200'
    deploy:
      placement:
        constraints: [node.labels.schedulable == true]
    command: |
      /bin/bash -c "echo '
      server {
        listen 9200;
        add_header X-Frame-Options "SAMEORIGIN";
        location / {
            proxy_pass http://elasticsearch:9200;
            proxy_http_version 1.1;
            proxy_set_header Connection keep-alive;
            proxy_set_header Upgrade $$http_upgrade;
            proxy_set_header Host $$host;
            proxy_set_header X-Real-IP $$remote_addr;
            proxy_cache_bypass $$http_upgrade;
        }
      }' | tee /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"

  kibana:
    image: docker.elastic.co/kibana/kibana:6.7.0
    ports:
      - 5601:5601
    networks:
      - es
    deploy:
      placement:
        constraints: [node.labels.schedulable == true]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5601/status"]
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 30s
networks:
  es:
  proxy:
    external: true